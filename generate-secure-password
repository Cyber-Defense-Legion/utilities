#!/usr/bin/env ruby
#
# This tool is meant to make it easier to generate passwords
# that are as cryptographically secure as possible.
#
# TODO: Finish implementing command-line parsing, especially
# so that the length of the generated password can be
# dynamically set by the user at runtime as they see fit.

# Require the optparse module to define and process command-
# line arguments.
require 'optparse'

# Require the secure random module.
require 'securerandom'

# Define a global variable to hold the debugging status.
debug = true

# Define an object to hold the program's command-line
# options.
programOptions = { }

# Configure command-line arguments.
OptionParser.new do |options|
    # Define the top-level banner to be displayed in the
    # help menu.
    options.banner = "Usage: generate-secure-password [options]"

    # Define an option for the user to be able to configure
    # the length of the passwords to be generated.
    options.on("-L", "--length", "The length of the password(s) to generate.") do |length|
        # If debug or verbose mode is enabled, log a message
        # to the console indicating the password length has
        # been defined.
        if debug
            puts "Password length: #{length}"
        end

        # Set the password length.
        programOptions[:passwordLength] = length
    end
end

# Generate a cryptographically strong password string.
puts SecureRandom.alphanumeric(20)
